{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ldmlnum.min.js","webpack:///webpack/bootstrap 6ac006c21b221fb0e91b","webpack:///./index.js","webpack:///./src/ldmlnum.js","webpack:///./src/formatint.js","webpack:///./src/padright.js","webpack:///./src/locale.js","webpack:///./src/roundhalfeven.js","webpack:///./src/splitsign.js","webpack:///./src/unquote.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","numfmt","pattern","locale","arguments","length","undefined","_locale$split","split","_locale$split2","_slicedToArray","lang","subLang","l10n","cGroup","thousands_separator","e5h","cDecimal","decimal_separator","cPlus","positive_sign","cMinus","negative_sign","cExp","exponent_symbol","cInf","infinity_symbol","cNaN","nan_symbol","n","isNeg","f","i","v","e","scale","isFinite","exponent","Math","abs","floor","log","LN10","int_min","int_max","pow","_splitSign","splitSign","frac_min","frac_max","pad","_splitSign2","prefix","exp_plus","formatInt","exp_min","Infinity","suffix","significance","_splitSign3","sig_min","sig_max","_splitSign4","round","padright","String","isNaN","grouping","ret","ipos","gsize","group_sec","group_pri","substr","s","reSubpatt","exec","posBits","reChunker","number","negBits","numBits","reNumbits","integer","fraction","indexOf","test","Error","replace","unquote","clean","sigBits","sl","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","value","err","Array","isArray","Object","TypeError","makelocale","roundhalfeven","en","is","sv","min","max","slice","l","grp","dec","pos","neg","exp","inf","nan","EPSILON","places","ipart","dist","ceil","d","adj","w"],"mappings":"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","file":"ldmlnum.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ldmlnum\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ldmlnum\"] = factory();\n\telse\n\t\troot[\"ldmlnum\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ldmlnum\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ldmlnum\"] = factory();\n\telse\n\t\troot[\"ldmlnum\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar formatInt = __webpack_require__(2);\n\tvar makelocale = __webpack_require__(4);\n\tvar roundhalfeven = __webpack_require__(5);\n\tvar splitSign = __webpack_require__(6);\n\tvar unquote = __webpack_require__(7);\n\tvar padright = __webpack_require__(3);\n\t\n\tvar reSubpatt = /^((?:'[^']*'|[^';]+)*)(?:;(.*))?$/;\n\tvar reChunker = /^((?:'[^']*'|[^0-9@#.,])*)([0-9@#.,E+]+)(.*)$/;\n\tvar reNumbits = /^([^E.]*)(?:\\.([^E]*))?(?:E(\\+?)(.*))?$/;\n\t\n\tvar e5h = makelocale();\n\t\n\tfunction numfmt(pattern) {\n\t  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\t\n\t  // resolve default pattern for locale if no pattern was provided\n\t  if (!pattern) {\n\t    pattern = '#,##0.###;-#,##0.###';\n\t  }\n\t\n\t  // localizable things\n\t  // be liberal accepting - and _\n\t\n\t  var _locale$split = locale.split(/[_-]/),\n\t      _locale$split2 = _slicedToArray(_locale$split, 2),\n\t      lang = _locale$split2[0],\n\t      subLang = _locale$split2[1];\n\t\n\t  var l10n = numfmt.locale[locale] || numfmt.locale[lang + '-' + subLang] || numfmt.locale[lang + '_' + subLang] || numfmt.locale[lang] || {};\n\t  var cGroup = l10n.thousands_separator || e5h.thousands_separator;\n\t  var cDecimal = l10n.decimal_separator || e5h.decimal_separator;\n\t  var cPlus = l10n.positive_sign || e5h.positive_sign;\n\t  var cMinus = l10n.negative_sign || e5h.negative_sign;\n\t  var cExp = l10n.exponent_symbol || e5h.exponent_symbol;\n\t  var cInf = l10n.infinity_symbol || e5h.infinity_symbol;\n\t  var cNaN = l10n.nan_symbol || e5h.nan_symbol;\n\t\n\t  var p = function p(n) {\n\t    var isNeg = (n < 0) * 1;\n\t    var f = '';\n\t    var i = '';\n\t    var v = void 0;\n\t    var e = void 0;\n\t\n\t    n *= p.scale;\n\t\n\t    // == normal formatting ==\n\t    if (!isFinite(n)) {\n\t      i = isNaN(n) ? cNaN : cInf;\n\t    } else if (p.exponent) {\n\t      v = Math.abs(n);\n\t      e = v ? Math.floor(Math.log(v) / Math.LN10) : 0;\n\t\n\t      if (p.int_min === p.int_max) {\n\t        // Minimum number of integer digits\n\t        e -= p.int_min - 1;\n\t      } else if (p.int_max && isFinite(p.int_max)) {\n\t        // Exponent grouping\n\t        e = Math.floor(e / p.int_max) * p.int_max;\n\t      }\n\t\n\t      v = e < 0 ? v * Math.pow(10, -e) : v / Math.pow(10, e);\n\t\n\t      var _splitSign = splitSign(v, p.frac_min + p.int_min, p.frac_max + p.int_max, p.pad);\n\t\n\t      var _splitSign2 = _slicedToArray(_splitSign, 2);\n\t\n\t      i = _splitSign2[0];\n\t      f = _splitSign2[1];\n\t\n\t\n\t      return p.prefix[0] + (isNeg ? cMinus : '') + (i + (f ? cDecimal + f : '')) + cExp + (e < 0 ? cMinus : p.exp_plus ? cPlus : '') + formatInt(Math.abs(e), p.exp_min, Infinity, p.pad) + p.suffix[0];\n\t    } else if (p.significance) {\n\t      var _splitSign3 = splitSign(n, p.sig_min, p.sig_max, p.pad);\n\t\n\t      var _splitSign4 = _slicedToArray(_splitSign3, 2);\n\t\n\t      i = _splitSign4[0];\n\t      f = _splitSign4[1];\n\t    } else {\n\t      if (p.frac_min === p.frac_max && !p.frac_min) {\n\t        v = Math.round(Math.abs(n));\n\t      } else {\n\t        v = Math.floor(Math.abs(n));\n\t      }\n\t\n\t      if (p.int_max !== Infinity) {\n\t        // is is possible to add a max digits to non-sci patterns?\n\t        // we should parse this as infinite and allow user to set int_max\n\t      }\n\t      i = formatInt(v, p.int_min, Infinity, p.pad);\n\t\n\t      if (n % 1) {\n\t        // have fraction\n\t        f = padright(String(numfmt.round(n, p.frac_max)).split('.')[1] || '', p.frac_min, p.pad);\n\t      } else {\n\t        // no fraction -- just add some zeros\n\t        f = padright(f, p.frac_min, '0');\n\t      }\n\t    }\n\t\n\t    if (isFinite(n) && p.grouping) {\n\t      var ret = '';\n\t      var ipos = i.length;\n\t      var gsize = p.group_sec;\n\t\n\t      if (ipos > p.group_pri) {\n\t        ret = cGroup + i.substr(ipos -= p.group_pri, p.group_pri) + ret;\n\t      }\n\t      while (ipos > gsize) {\n\t        ret = cGroup + i.substr(ipos -= gsize, gsize) + ret;\n\t      }\n\t      i = ipos ? i.substr(0, ipos) + ret : ret;\n\t    }\n\t\n\t    return p.prefix[isNeg] + i + (f ? cDecimal + f : '') + p.suffix[isNeg];\n\t  };\n\t\n\t  var s = reSubpatt.exec(pattern);\n\t  var posBits = reChunker.exec(s[1]);\n\t  var number = posBits[2] || '';\n\t  var negBits = s[2] ? reChunker.exec(s[2]) : null;\n\t  var numBits = reNumbits.exec(number);\n\t  var integer = numBits[1] || '';\n\t  var fraction = numBits[2] || '';\n\t\n\t  p.pattern = pattern;\n\t\n\t  p.significance = number.indexOf('@') >= 0;\n\t  p.exponent = number.indexOf('E') >= 0;\n\t\n\t  p.grouping = number.indexOf(',') >= 0;\n\t\n\t  p.exp_plus = !!numBits[3]; // show exponent positive mark\n\t\n\t\n\t  if (/\\d(?=.*#)/.test(integer)) {\n\t    throw new Error('Nonsensical number pattern: ' + integer);\n\t  }\n\t  if (/#(?=.*\\d)/.test(fraction)) {\n\t    throw new Error('Nonsensical number pattern: ' + fraction);\n\t  }\n\t  if (p.exponent && p.grouping) {\n\t    // \"Exponential patterns may not contain grouping separators\"\n\t    throw new Error('Exponential patterns must not contain \",\"');\n\t  }\n\t  if (p.significance && number.indexOf('.') >= 0) {\n\t    // \"If a pattern uses significant digits, it may not contain a decimal separator [...]\"\n\t    throw new Error('Significant digit patterns must not contain \".\": ' + pattern);\n\t  }\n\t  if (p.significance && integer.indexOf('0') >= 0) {\n\t    // \"If a pattern uses significant digits, it may not contain [...] the '0' pattern character.\"\n\t    throw new Error('Significant digit patterns must not contain \"0\": ' + pattern);\n\t  }\n\t\n\t  // parse min/max digit counts\n\t  p.int_max = !p.exponent && !p.significance ? Infinity : integer.replace(/[,]/g, '').length;\n\t  p.int_min = integer.length < 1 ? 0 : integer.replace(/[,#]/g, '').length || 1;\n\t  p.frac_max = fraction.replace(/[,]/g, '').length;\n\t  p.frac_min = fraction.replace(/[,#]/g, '').length;\n\t\n\t  p.prefix = [unquote(posBits[1]), unquote(negBits ? negBits[1] : '-' + posBits[1])];\n\t  p.suffix = [unquote(posBits[3]), unquote(negBits ? negBits[3] : posBits[3])];\n\t\n\t  p.pad = '0';\n\t  var clean = pattern.replace(/'([^']*)'/g, '');\n\t  p.scale = /%/.test(clean) ? 100 : 1;\n\t\n\t  if (p.significance) {\n\t    var sigBits = /(@+)([^.E]*)/.exec(number);\n\t    p.sig_min = sigBits[1].length;\n\t    p.sig_max = p.sig_min + sigBits[2].length;\n\t  } else {\n\t    p.sig_min = 1;\n\t    p.sig_max = Infinity;\n\t  }\n\t\n\t  if (p.grouping) {\n\t    var _s = (integer || '').split(',');\n\t    var sl = _s.length;\n\t    if (sl === 2) {\n\t      p.group_pri = p.group_sec = _s[1].length;\n\t    } else if (sl > 2) {\n\t      p.group_pri = _s[sl - 1].length;\n\t      p.group_sec = _s[sl - 2].length;\n\t    }\n\t  } else {\n\t    p.group_pri = 0;\n\t    p.group_sec = 0;\n\t  }\n\t\n\t  if (p.exponent) {\n\t    // The number of digit characters after the exponent character gives the\n\t    // minimum exponent digit count. There is no maximum.\n\t    p.exp_min = numBits[4].length;\n\t    if (p.significance) {\n\t      p.int_min = p.int_max = 1;\n\t      p.frac_min = p.sig_min;\n\t      p.frac_max = p.sig_max;\n\t    }\n\t  }\n\t\n\t  return p;\n\t}\n\t\n\t// export the interface\n\tnumfmt.round = roundhalfeven;\n\tnumfmt.locale = makelocale;\n\tnumfmt.locale.en = makelocale();\n\tnumfmt.locale.is = makelocale('.', ',');\n\tnumfmt.locale.sv = makelocale('.', ',');\n\t\n\tmodule.exports = numfmt;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar padright = __webpack_require__(3);\n\t\n\tmodule.exports = function (n, min, max, pad) {\n\t  if (!n && !min) {\n\t    return '';\n\t  }\n\t  var i = String(n);\n\t  if (i.length > max) {\n\t    // For example, 1997 is formatted as \"97\" if the maximum integer digits is set to 2.\n\t    return i.slice(i.length - max);\n\t  }\n\t  return padright('', min - i.length, pad) + i;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (s, l) {\n\t  var p = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';\n\t\n\t  while (s.length < l) {\n\t    s += p;\n\t  }\n\t  return s;\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function locale() {\n\t  var grp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ',';\n\t  var dec = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';\n\t  var pos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '+';\n\t  var neg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\t  var exp = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'E';\n\t  var inf = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '∞';\n\t  var nan = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '☹';\n\t\n\t  return {\n\t    thousands_separator: grp,\n\t    decimal_separator: dec,\n\t    positive_sign: pos,\n\t    negative_sign: neg,\n\t    exponent_symbol: exp,\n\t    infinity_symbol: inf,\n\t    nan_symbol: nan\n\t  };\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar EPSILON = 1e-12;\n\t\n\tmodule.exports = function roundhalfeven(value, places) {\n\t  if (value < 0) {\n\t    return -roundhalfeven(-value, places);\n\t  }\n\t  if (places) {\n\t    var p = Math.pow(10, places || 0) || 1;\n\t    return roundhalfeven(value * p, 0) / p;\n\t  }\n\t  var ipart = Math.floor(value);\n\t  var dist = value - (ipart + 0.5);\n\t  if (dist > -EPSILON && dist < EPSILON) {\n\t    return ipart % 2 < EPSILON ? ipart : Math.ceil(ipart + 0.5);\n\t  }\n\t  return Math.round(value);\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar roundhalfeven = __webpack_require__(5);\n\tvar padright = __webpack_require__(3);\n\t\n\tmodule.exports = function (n, min, max, pad) {\n\t  var inf = max === Infinity;\n\t  var d = inf ? 0 : Math.ceil(n ? Math.log(n < 0 ? -n : n) / Math.LN10 : 1);\n\t  var adj = inf ? Math.abs(n) : roundhalfeven(Math.abs(n), Math.floor(max - Math.floor(d)));\n\t  var v = Math.floor(adj);\n\t  var i = String(v);\n\t  var f = String(adj).split('.')[1] || '';\n\t  var w = adj ? (v && i.length) + f.length + (d < 0 ? d : 0) : 1;\n\t  return [i, f + padright('', min - w, pad)];\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function unquote(s) {\n\t  return s && s.replace(/'([^']+)'/g, '$1').replace(/''/g, \"'\");\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// ldmlnum.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6ac006c21b221fb0e91b","module.exports = require( './src/ldmlnum' );\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","const formatInt = require( './formatint' );\nconst makelocale = require( './locale' );\nconst roundhalfeven = require( './roundhalfeven' );\nconst splitSign = require( './splitsign' );\nconst unquote = require( './unquote' );\nconst padright = require( './padright' );\n\nconst reSubpatt = /^((?:'[^']*'|[^';]+)*)(?:;(.*))?$/;\nconst reChunker = /^((?:'[^']*'|[^0-9@#.,])*)([0-9@#.,E+]+)(.*)$/;\nconst reNumbits = /^([^E.]*)(?:\\.([^E]*))?(?:E(\\+?)(.*))?$/;\n\nconst e5h = makelocale();\n\nfunction numfmt ( pattern, locale = 'en' ) {\n  // resolve default pattern for locale if no pattern was provided\n  if ( !pattern ) {\n    pattern = '#,##0.###;-#,##0.###';\n  }\n\n  // localizable things\n  // be liberal accepting - and _\n  const [ lang, subLang ] = locale.split( /[_-]/ );\n  const l10n = numfmt.locale[ locale ] ||\n               numfmt.locale[ `${ lang }-${ subLang }` ] ||\n               numfmt.locale[ `${ lang }_${ subLang }` ] ||\n               numfmt.locale[ lang ] || {};\n  const cGroup = l10n.thousands_separator || e5h.thousands_separator;\n  const cDecimal = l10n.decimal_separator || e5h.decimal_separator;\n  const cPlus = l10n.positive_sign || e5h.positive_sign;\n  const cMinus = l10n.negative_sign || e5h.negative_sign;\n  const cExp = l10n.exponent_symbol || e5h.exponent_symbol;\n  const cInf = l10n.infinity_symbol || e5h.infinity_symbol;\n  const cNaN = l10n.nan_symbol || e5h.nan_symbol;\n\n  const p = function ( n ) {\n    const isNeg = ( n < 0 ) * 1;\n    let f = '';\n    let i = '';\n    let v;\n    let e;\n\n    n *= p.scale;\n\n    // == normal formatting ==\n    if ( !isFinite( n ) ) {\n      i = isNaN( n ) ? cNaN : cInf;\n    }\n    else if ( p.exponent ) {\n      v = Math.abs( n );\n      e = ( v ) ? Math.floor( Math.log( v ) / Math.LN10 ) : 0;\n\n      if ( p.int_min === p.int_max ) {\n        // Minimum number of integer digits\n        e -= ( p.int_min - 1 );\n      }\n      else if ( p.int_max && isFinite( p.int_max ) ) {\n        // Exponent grouping\n        e = Math.floor( e / p.int_max ) * p.int_max;\n      }\n\n      v = ( e < 0 ) ? v * Math.pow( 10, -e ) : v / Math.pow( 10, e );\n      [i, f] = splitSign( v, p.frac_min + p.int_min, p.frac_max + p.int_max, p.pad );\n\n      return p.prefix[0] +\n            ( isNeg ? cMinus : '' ) +\n            ( i + ( f ? cDecimal + f : '' ) ) +\n            cExp +\n            ( ( e < 0 ) ? cMinus : ( p.exp_plus ) ? cPlus : '' ) +\n            formatInt( Math.abs( e ), p.exp_min, Infinity, p.pad ) +\n            p.suffix[0];\n    }\n    else if ( p.significance ) {\n      [i, f] = splitSign( n, p.sig_min, p.sig_max, p.pad );\n    }\n    else {\n      if ( p.frac_min === p.frac_max && !p.frac_min ) {\n        v = Math.round( Math.abs( n ) );\n      }\n      else {\n        v = Math.floor( Math.abs( n ) );\n      }\n\n      if ( p.int_max !== Infinity ) {\n        // is is possible to add a max digits to non-sci patterns?\n        // we should parse this as infinite and allow user to set int_max\n      }\n      i = formatInt( v, p.int_min, Infinity, p.pad );\n\n      if ( n % 1 ) {\n        // have fraction\n        f = padright( String( numfmt.round( n, p.frac_max ) ).split( '.' )[ 1 ] || '', p.frac_min, p.pad );\n      }\n      else {\n        // no fraction -- just add some zeros\n        f = padright( f, p.frac_min, '0' );\n      }\n    }\n\n    if ( isFinite( n ) && p.grouping ) {\n      let ret = '';\n      let ipos = i.length;\n      const gsize = p.group_sec;\n\n      if ( ipos > p.group_pri ) {\n        ret = cGroup + i.substr( ipos -= p.group_pri, p.group_pri ) + ret;\n      }\n      while ( ipos > gsize ) {\n        ret = cGroup + i.substr( ipos -= gsize, gsize ) + ret;\n      }\n      i = ipos ? i.substr( 0, ipos ) + ret : ret;\n    }\n\n    return p.prefix[ isNeg ] + i + ( f ? cDecimal + f : '' ) + p.suffix[ isNeg ];\n  };\n\n  const s = reSubpatt.exec( pattern );\n  const posBits = reChunker.exec( s[1] );\n  const number = posBits[2] || '';\n  const negBits = s[2] ? reChunker.exec( s[2] ) : null;\n  const numBits = reNumbits.exec( number );\n  const integer = numBits[1] || '';\n  const fraction = numBits[2] || '';\n\n  p.pattern = pattern;\n\n  p.significance = number.indexOf( '@' ) >= 0;\n  p.exponent = number.indexOf( 'E' ) >= 0;\n\n  p.grouping = number.indexOf( ',' ) >= 0;\n\n  p.exp_plus = !!numBits[3];  // show exponent positive mark\n\n\n  if ( /\\d(?=.*#)/.test( integer ) ) {\n    throw new Error( `Nonsensical number pattern: ${ integer }` );\n  }\n  if ( /#(?=.*\\d)/.test( fraction ) ) {\n    throw new Error( `Nonsensical number pattern: ${ fraction }` );\n  }\n  if ( p.exponent && p.grouping ) {\n    // \"Exponential patterns may not contain grouping separators\"\n    throw new Error( 'Exponential patterns must not contain \",\"' );\n  }\n  if ( p.significance && number.indexOf( '.' ) >= 0 ) {\n    // \"If a pattern uses significant digits, it may not contain a decimal separator [...]\"\n    throw new Error( `Significant digit patterns must not contain \".\": ${ pattern }` );\n  }\n  if ( p.significance && integer.indexOf( '0' ) >= 0 ) {\n    // \"If a pattern uses significant digits, it may not contain [...] the '0' pattern character.\"\n    throw new Error( `Significant digit patterns must not contain \"0\": ${ pattern }` );\n  }\n\n  // parse min/max digit counts\n  p.int_max = ( !p.exponent && !p.significance ) ? Infinity : integer.replace( /[,]/g, '' ).length;\n  p.int_min = ( integer.length < 1 ) ? 0 : integer.replace( /[,#]/g, '' ).length || 1;\n  p.frac_max = fraction.replace( /[,]/g, '' ).length;\n  p.frac_min = fraction.replace( /[,#]/g, '' ).length;\n\n  p.prefix = [\n    unquote( posBits[1] ),\n    unquote( negBits ? negBits[1] : '-' + posBits[1] )\n  ];\n  p.suffix = [\n    unquote( posBits[3] ),\n    unquote( negBits ? negBits[3] : posBits[3] )\n  ];\n\n  p.pad = '0';\n  const clean = pattern.replace( /'([^']*)'/g, '' );\n  p.scale = /%/.test( clean ) ? 100 : 1;\n\n  if ( p.significance ) {\n    const sigBits = /(@+)([^.E]*)/.exec( number );\n    p.sig_min = sigBits[1].length;\n    p.sig_max = p.sig_min + sigBits[2].length;\n  }\n  else {\n    p.sig_min = 1;\n    p.sig_max = Infinity;\n  }\n\n  if ( p.grouping ) {\n    const s = ( integer || '' ).split( ',' );\n    const sl = s.length;\n    if ( sl === 2 ) {\n      p.group_pri = p.group_sec = s[1].length;\n    }\n    else if ( sl > 2 ) {\n      p.group_pri = s[ sl - 1 ].length;\n      p.group_sec = s[ sl - 2 ].length;\n    }\n  }\n  else {\n    p.group_pri = 0;\n    p.group_sec = 0;\n  }\n\n  if ( p.exponent ) {\n    // The number of digit characters after the exponent character gives the\n    // minimum exponent digit count. There is no maximum.\n    p.exp_min = numBits[4].length;\n    if ( p.significance ) {\n      p.int_min = p.int_max = 1;\n      p.frac_min = p.sig_min;\n      p.frac_max = p.sig_max;\n    }\n  }\n\n  return p;\n}\n\n// export the interface\nnumfmt.round = roundhalfeven;\nnumfmt.locale = makelocale;\nnumfmt.locale.en = makelocale();\nnumfmt.locale.is = makelocale( '.', ',' );\nnumfmt.locale.sv = makelocale( '.', ',' );\n\nmodule.exports = numfmt;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ldmlnum.js","const padright = require( './padright' );\n\nmodule.exports = function ( n, min, max, pad ) {\n  if ( !n && !min ) { return ''; }\n  const i = String( n );\n  if ( i.length > max ) {\n    // For example, 1997 is formatted as \"97\" if the maximum integer digits is set to 2.\n    return i.slice( i.length - max );\n  }\n  return padright( '', min - i.length, pad ) + i;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatint.js","module.exports = function ( s, l, p = '0' ) {\n  while ( s.length < l ) { s += p; }\n  return s;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/padright.js","module.exports = function locale ( grp = ',', dec = '.', pos = '+', neg = '-', exp = 'E', inf = '∞', nan = '☹' ) {\n  return {\n    thousands_separator: grp,\n    decimal_separator: dec,\n    positive_sign: pos,\n    negative_sign: neg,\n    exponent_symbol: exp,\n    infinity_symbol: inf,\n    nan_symbol: nan\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/locale.js","const EPSILON = 1e-12;\n\nmodule.exports = function roundhalfeven ( value, places ) {\n  if ( value < 0 ) {\n    return -roundhalfeven( -value, places );\n  }\n  if ( places ) {\n    const p = Math.pow( 10, places || 0 ) || 1;\n    return roundhalfeven( value * p, 0 ) / p;\n  }\n  const ipart = Math.floor( value );\n  const dist = ( value - ( ipart + 0.5 ) );\n  if ( dist > -EPSILON && dist < EPSILON ) {\n    return ( ipart % 2 < EPSILON ) ? ipart : Math.ceil( ipart + 0.5 );\n  }\n  return Math.round( value );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/roundhalfeven.js","const roundhalfeven = require( './roundhalfeven' );\nconst padright = require( './padright' );\n\nmodule.exports = function ( n, min, max, pad ) {\n  const inf = ( max === Infinity );\n  const d = ( inf ) ? 0 : Math.ceil( n ? Math.log( n < 0 ? -n : n ) / Math.LN10 : 1 );\n  const adj = ( inf ) ? Math.abs( n ) : roundhalfeven( Math.abs( n ), Math.floor( max - Math.floor( d ) ) );\n  const v = Math.floor( adj );\n  const i = String( v );\n  const f = String( adj ).split( '.' )[ 1 ] || '';\n  const w = adj ? ( v && i.length ) + f.length + ( d < 0 ? d : 0 ) : 1;\n  return [ i, f + padright( '', min - w, pad ) ];\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/splitsign.js","module.exports = function unquote ( s ) {\n  return s && s.replace( /'([^']+)'/g, '$1' ).replace( /''/g, \"'\" );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/unquote.js"],"sourceRoot":""}